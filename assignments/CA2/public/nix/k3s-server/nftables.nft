#!/run/current-system/sw/bin/nft -f
# nft flush ruleset

add table inet firewall {

    chain inbound_ipv4 {
        # accepting ping (icmp-echo-request) for diagnostic purposes.
        # However, it also lets probes discover this host is alive.
        # This sample accepts them within a certain rate limit:
        #
        icmp type echo-request limit rate 5/second accept
    }

    chain inbound_ipv6 {
        # accept neighbour discovery otherwise connectivity breaks
        #
        icmpv6 type { nd-neighbor-solicit, nd-router-advert, nd-neighbor-advert } accept

        # accepting ping (icmpv6-echo-request) for diagnostic purposes.
        # However, it also lets probes discover this host is alive.
        # This sample accepts them within a certain rate limit:
        #
        icmpv6 type echo-request limit rate 5/second accept
    }

    chain inbound {

        # By default, drop all traffic unless it meets a filter
        # criteria specified by the rules that follow below.
        type filter hook input priority 0; policy drop;

        # Allow traffic from established and related packets, drop invalid
        ct state vmap { established : accept, related : accept, invalid : drop }

        # Allow loopback traffic.
        iifname lo accept

        # Jump to chain according to layer 3 protocol using a verdict map
        meta protocol vmap { ip : jump inbound_ipv4, ip6 : jump inbound_ipv6 }

        # Allow SSH on port TCP/22 from LAN_Server (172.22.0.0/24) and LAN_Client (172.22.1.0/24)
        ip saddr 172.22.0.0/24 tcp dport 22 accept
        ip saddr 172.22.1.0/24 tcp dport 22 accept

        # Allow DNS queries to external DNS server
        ip daddr 172.22.100.104 udp dport 53 accept
        ip daddr 172.22.100.104 tcp dport 53 accept

        # Allow traffic from k3s pod network
        ip saddr 10.42.0.0/16 accept

        # Allow traffic from k3s service network
        ip saddr 10.43.0.0/16 accept

        # K3s API Server - allow from LAN_Server and LAN_Client
        ip saddr 172.22.0.0/24 tcp dport 6443 accept
        ip saddr 172.22.1.0/24 tcp dport 6443 accept

        # K3s Supervisory port for HA - allow from other K3s nodes
        ip saddr 172.22.0.134 tcp dport 9345 accept
        ip saddr 172.22.0.135 tcp dport 9345 accept
        ip saddr 172.22.0.136 tcp dport 9345 accept

        # Kubelet API - allow from LAN_Server
        ip saddr 172.22.0.0/24 tcp dport 10250 accept

        # etcd client and peer ports for HA - allow from other K3s nodes
        ip saddr 172.22.0.134 tcp dport 2379 accept
        ip saddr 172.22.0.135 tcp dport 2379 accept
        ip saddr 172.22.0.136 tcp dport 2379 accept
        ip saddr 172.22.0.134 tcp dport 2380 accept
        ip saddr 172.22.0.135 tcp dport 2380 accept
        ip saddr 172.22.0.136 tcp dport 2380 accept

        # VXLAN for Flannel CNI - allow from other K3s nodes
        ip saddr 172.22.0.134 udp dport 8472 accept
        ip saddr 172.22.0.135 udp dport 8472 accept
        ip saddr 172.22.0.136 udp dport 8472 accept

        # NodePort services - allow from LAN_Server
        ip saddr 172.22.0.0/24 tcp dport 30000-32767 accept
        ip saddr 172.22.0.0/24 udp dport 30000-32767 accept
        
        # Syslog-ng NodePort services - allow from LAN networks
        ip saddr 172.22.0.0/24 tcp dport 30515 accept  # syslog-ng TCP
        ip saddr 172.22.0.0/24 udp dport 30514 accept  # syslog-ng UDP
        ip saddr 172.22.1.0/24 tcp dport 30515 accept  # syslog-ng TCP from LAN_Client
        ip saddr 172.22.1.0/24 udp dport 30514 accept  # syslog-ng UDP from LAN_Client

        # Metrics server - allow from LAN_Server
        ip saddr 172.22.0.0/24 tcp dport 10255 accept

        # Uncomment to enable logging of denied inbound traffic
        # log prefix "[nftables] Inbound Denied: " counter drop
    }

    chain forward {
        # Forward chain for k3s CNI (Flannel) traffic
        type filter hook forward priority 0; policy drop;

        # Allow established/related connections
        ct state vmap { established : accept, related : accept, invalid : drop }

        # Allow forwarding for k3s pod network
        ip saddr 10.42.0.0/16 accept
        ip daddr 10.42.0.0/16 accept

        # Allow forwarding for k3s service network
        ip saddr 10.43.0.0/16 accept
        ip daddr 10.43.0.0/16 accept

        # Allow traffic between k3s nodes
        ip saddr 172.22.0.134 ip daddr 172.22.0.135 accept
        ip saddr 172.22.0.135 ip daddr 172.22.0.134 accept
        ip saddr 172.22.0.134 ip daddr 172.22.0.136 accept
        ip saddr 172.22.0.136 ip daddr 172.22.0.134 accept
        ip saddr 172.22.0.135 ip daddr 172.22.0.136 accept
        ip saddr 172.22.0.136 ip daddr 172.22.0.135 accept
    }

    # no need to define output chain, default policy is accept if undefined.
}
