flush ruleset

table inet firewall {
    # Define sets for blacklisted IPs and connection tracking
    set blacklist_ipv4 {
        type ipv4_addr
        flags timeout
        timeout 1h
        size 1000
    }
    
    set blacklist_ipv6 {
        type ipv6_addr
        flags timeout
        timeout 1h
        size 1000
    }
    
    set ssh_attempts {
        type ipv4_addr
        flags timeout
        timeout 1h
        size 1000
    }

    chain inbound_ipv4 {
        # accepting ping (icmp-echo-request) for diagnostic purposes.
        # However, it also lets probes discover this host is alive.
        # This sample accepts them within a certain rate limit:
        #
        icmp type echo-request limit rate 5/second accept
    }

    chain inbound_ipv6 {
        # accept neighbour discovery otherwise connectivity breaks
        #
        icmpv6 type { nd-neighbor-solicit, nd-router-advert, nd-neighbor-advert } accept

        # accepting ping (icmpv6-echo-request) for diagnostic purposes.
        # However, it also lets probes discover this host is alive.
        # This sample accepts them within a certain rate limit:
        #
        icmpv6 type echo-request limit rate 5/second accept
    }

    chain inbound {

        # By default, drop all traffic unless it meets a filter
        # criteria specified by the rules that follow below.
        type filter hook input priority 0; policy drop;

        # Drop traffic from blacklisted IPs
        ip saddr @blacklist_ipv4 drop
        ip6 saddr @blacklist_ipv6 drop

        # Allow traffic from established and related packets, drop invalid
        ct state vmap { established : accept, related : accept, invalid : drop }

        # Allow loopback traffic.
        iifname lo accept

        # Jump to chain according to layer 3 protocol using a verdict map
        meta protocol vmap { ip : jump inbound_ipv4, ip6 : jump inbound_ipv6 }

        # SSH with rate limiting and connection tracking
        ip saddr 172.22.0.0/24 tcp dport 22 limit rate 5/minute accept
        ip saddr 172.22.1.0/24 tcp dport 22 limit rate 5/minute accept
        ip saddr 172.22.2.0/24 tcp dport 22 limit rate 5/minute accept
        
        # Track SSH attempts from unauthorized sources
        tcp dport 22 ip saddr != 172.22.0.0/24 ip saddr != 172.22.1.0/24 ip saddr != 172.22.2.0/24 \
            add @ssh_attempts { ip saddr timeout 1h } \
            limit rate 3/minute counter log prefix "[nftables] SSH attempt from: " drop

        # Code-server with rate limiting and connection tracking
        ip saddr 172.22.0.0/24 tcp dport 8080 limit rate 10/minute accept
        
        # Track code-server attempts from unauthorized sources
        tcp dport 8080 ip saddr != 172.22.0.0/24 \
            add @ssh_attempts { ip saddr timeout 1h } \
            limit rate 3/minute counter log prefix "[nftables] Code-server attempt from: " drop

        # Log and drop all other traffic
        log prefix "[nftables] Inbound Denied: " counter drop
    }

    chain forward {
        # Drop everything (assumes this device is not a router)
        type filter hook forward priority 0; policy drop;
    }

    chain outbound {
        # Allow outbound traffic to k3s server for syslog forwarding
        type filter hook output priority 0; policy accept;
        
        # Allow syslog forwarding to k3s server (alphard)
        ip daddr 172.22.0.134 tcp dport 30515 accept
        ip daddr 172.22.0.134 udp dport 30514 accept
        
        # Allow DNS queries
        udp dport 53 accept
        tcp dport 53 accept
        
        # Allow NTP for time synchronization
        udp dport 123 accept
        
        # Allow HTTP/HTTPS for package updates
        tcp dport { 80, 443 } accept
    }
}
