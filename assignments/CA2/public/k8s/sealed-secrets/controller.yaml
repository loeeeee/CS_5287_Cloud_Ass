apiVersion: v1
kind: Namespace
metadata:
  name: sealed-secrets
  labels:
    name: sealed-secrets
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sealed-secrets
  namespace: sealed-secrets
---
apiVersion: v1
kind: Secret
metadata:
  name: sealed-secrets-key
  namespace: sealed-secrets
  annotations:
    sealedsecrets.bitnami.com/sealed-secrets-key: active
type: kubernetes.io/tls
data:
  # This will be populated by the controller
  tls.crt: ""
  tls.key: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sealed-secrets-controller
  namespace: sealed-secrets
  labels:
    app.kubernetes.io/name: sealed-secrets
    app.kubernetes.io/instance: sealed-secrets
    app.kubernetes.io/version: v0.24.5
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sealed-secrets
      app.kubernetes.io/instance: sealed-secrets
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sealed-secrets
        app.kubernetes.io/instance: sealed-secrets
        app.kubernetes.io/version: v0.24.5
    spec:
      serviceAccountName: sealed-secrets
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: controller
        image: bitnami/sealed-secrets-controller:v0.24.5
        imagePullPolicy: IfNotPresent
        command:
        - controller
        env:
        - name: SEALED_SECRETS_PRIVATE_KEY
          value: sealed-secrets-key
        - name: SEALED_SECRETS_PUBLIC_KEY
          value: sealed-secrets-key
        - name: SEALED_SECRETS_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /readyz
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: sealed-secrets-key
          mountPath: /etc/sealed-secrets-key
          readOnly: true
      volumes:
      - name: tmp
        emptyDir: {}
      - name: sealed-secrets-key
        secret:
          secretName: sealed-secrets-key
          defaultMode: 420
---
apiVersion: v1
kind: Service
metadata:
  name: sealed-secrets-controller
  namespace: sealed-secrets
  labels:
    app.kubernetes.io/name: sealed-secrets
    app.kubernetes.io/instance: sealed-secrets
    app.kubernetes.io/version: v0.24.5
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sealed-secrets
    app.kubernetes.io/instance: sealed-secrets
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sealed-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - bitnami.com
  resources:
  - sealedsecrets
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - bitnami.com
  resources:
  - sealedsecrets/status
  verbs:
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sealed-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sealed-secrets
subjects:
- kind: ServiceAccount
  name: sealed-secrets
  namespace: sealed-secrets
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sealedsecrets.bitnami.com
spec:
  group: bitnami.com
  versions:
  - name: v1alpha1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              encryptedData:
                type: object
                additionalProperties:
                  type: string
              template:
                type: object
                properties:
                  metadata:
                    type: object
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                      labels:
                        type: object
                        additionalProperties:
                          type: string
                      annotations:
                        type: object
                        additionalProperties:
                          type: string
                      ownerReferences:
                        type: array
                        items:
                          type: object
                          properties:
                            apiVersion:
                              type: string
                            kind:
                              type: string
                            name:
                              type: string
                            uid:
                              type: string
                            controller:
                              type: boolean
                            blockOwnerDeletion:
                              type: boolean
                  data:
                    type: object
                    additionalProperties:
                      type: string
                  type:
                    type: string
          status:
            type: object
            properties:
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    lastTransitionTime:
                      type: string
                      format: date-time
                    lastUpdateTime:
                      type: string
                      format: date-time
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
              observedGeneration:
                type: integer
                format: int64
    subresources:
      status: {}
  scope: Namespaced
  names:
    plural: sealedsecrets
    singular: sealedsecret
    kind: SealedSecret
    shortNames:
    - ss
